{
    "name": "ROS Development Container",
    "privileged": true,
    "remoteUser": "${localEnv:USER}",
    // "remoteUser": "vscode",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            "USERNAME": "${localEnv:USER}",
            "DOCKER_REPO": "ros",
            "ROS_DISTRO": "jazzy",
            "IMAGE_SUFFIX": "",
            "UID": "${UID:-1000}",
            "GID": "${GID:-1000}"
            // "DOCKER_REPO": "osrf/ros",
            // "ROS_DISTRO": "humble",
            // "IMAGE_SUFFIX": "-desktop-full"
        },
        "opts": [
            "--network=host",
            "--ipc=host",
            "--gpus=all"
        ]
    },
    // "workspaceFolder": "/home/ws",
    // "workspaceMount": "source=${localWorkspaceFolder},target=/home/ws,type=bind",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-themes",
                "ms-vscode.cmake-tools",
                "ms-python.python",
                "eamodio.gitlens",
                "ms-iot.vscode-ros",
                "xaver.clang-format"
            ]
        },
        "settings": {
            "terminal.integrated.shell.*": "/bin/bash"
        }
    },
    "containerEnv": {
        "DISPLAY": "${localEnv:DISPLAY}",
        "QT_X11_NO_MITSHM": "1",
        "NVIDIA_DRIVER_CAPABILITIES": "all"
        // "ROS_LOCALHOST_ONLY": "1",
        // "ROS_DOMAIN_ID": "42"
    },
    "runArgs": [
        "--privileged",
        "--net=host",
        "-e",
        "DISPLAY=${env:DISPLAY}",
        "--gpus",
        "all"
    ],
    "mounts": [
        "source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached",
        "source=${localEnv:XAUTHORITY:-$HOME/.Xauthority},target=/root/.Xauthority,type=bind,consistency=cached"
        // "source=/dev/dri,target=/dev/dri,type=bind,consistency=cached"
        // "source=${localEnv:HOME}/.ssh,target=/home/${localEnv:USER}/.ssh,type=bind"
    ],
    "initializeCommand": "sh ./.devcontainer/initialize.sh",
    "postCreateCommand": "sh ./.devcontainer/postCreate.sh"
}